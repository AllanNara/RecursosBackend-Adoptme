paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos satisfactoriamente de la base de datos
          content:
            application/json: 
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      type: object
                      $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conxei√≥n con la base de datos

  /api/users/{uid}:
    get:
      summary: Obtiene un solo usuario a partir de su id
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea solicitar.
          schema:
            type: string
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/User'
        "400": 
          description: Parametros invalidos
        "404":
          description: Usuario no encontrado


    put:
      summary: Actualiza un usuario a partir de su id
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea solicitar.
          schema:
            type: string
      requestBody:
        description: Propiedades a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/requestBodies/User'
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: success
                  message:
                    type: string
                    example: User updated
        "400": 
          description: Parametros invalidos
        "404":
          description: Usuario no encontrado

    delete:
      summary: Eliminar un usuario por id
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea solicitar.
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: success
                  message:
                    type: string
                    example: User deleted
        "400": 
          description: Parametros invalidos
        "404":
          description: Usuario no encontrado
